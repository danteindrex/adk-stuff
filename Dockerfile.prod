FROM python:3.11-slim-bookworm AS builder

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=100 \
    VIRTUAL_ENV=/opt/venv

# Create and activate virtual environment
RUN python -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    python3-dev \
    python3-yaml \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements file
COPY requirements.txt .

# Install pip tools and downgrade pip to handle old package metadata
RUN pip install pip==23.3.2 setuptools==69.0.0 wheel

# Create a modern requirements file with updated versions
RUN echo "fastapi>=0.104.0" > requirements_updated.txt && \
    echo "uvicorn[standard]>=0.24.0" >> requirements_updated.txt && \
    echo "pydantic>=2.5.0" >> requirements_updated.txt && \
    echo "pydantic-settings>=2.1.0" >> requirements_updated.txt && \
    echo "PyYAML>=6.0" >> requirements_updated.txt && \
    echo "python-dotenv>=1.0.0" >> requirements_updated.txt && \
    echo "httpx>=0.25.0" >> requirements_updated.txt && \
    echo "aiofiles>=23.0.0" >> requirements_updated.txt && \
    echo "Pillow>=10.0.0" >> requirements_updated.txt && \
    echo "python-multipart>=0.0.6" >> requirements_updated.txt && \
    echo "websockets>=12.0" >> requirements_updated.txt && \
    echo "requests>=2.31.0" >> requirements_updated.txt

# Install Python dependencies
RUN pip install -r requirements_updated.txt

# Production stage
FROM python:3.11-slim-bookworm

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/opt/venv/bin:$PATH" \
    PYTHONPATH="/app" \
    PLAYWRIGHT_BROWSERS_PATH=/home/appuser/.cache/ms-playwright

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    python3-yaml \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libxcomposite1 \
    libxrandr2 \
    libxss1 \
    libxtst6 \
    xvfb \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user first
RUN groupadd -r appuser && useradd -r -g appuser -m appuser

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Set working directory
WORKDIR /app

# Copy application code (excluding requirements.txt to avoid confusion)
COPY --chown=appuser:appuser --exclude=requirements.txt . .

# Create necessary directories
RUN mkdir -p /app/logs /app/tmp /app/browser_use_logs /home/appuser/.cache \
    && chown -R appuser:appuser /app /home/appuser/.cache

# Switch to non-root user
USER appuser

# Install Playwright browsers as non-root user
RUN pip install playwright==1.48.0 \
    && playwright install chromium

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run the application
CMD ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8080", "--workers", "1"]